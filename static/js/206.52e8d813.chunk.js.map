{"version":3,"file":"static/js/206.52e8d813.chunk.js","mappings":"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","sources":["helpers/getImages.js","pages/ProjectsPages/BuildingsIndustrial.jsx","config.js","services/api.js","webpack://2mstudio/./src/pages/ProjectsPages/Projects.module.scss?05d7"],"sourcesContent":["import { fetchImages } from '../services/api';\n\nexport const getImages = async (posts, imgState, setImgState) => {\n  if (!posts) {\n    return;\n  }\n\n  try {\n    for (const post of posts) {\n      if (post.featured_media !== 0 && !imgState[post.featured_media]) {\n        const mediaData = await fetchImages(post.featured_media);\n        setImgState(prevState => ({\n          ...prevState,\n          [post.featured_media]: mediaData.source_url,\n        }));\n      }\n    }\n  } catch (error) {\n    console.error('There was a problem fetching media:', error);\n  }\n};\n","import { Helmet } from 'react-helmet';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './Projects.module.scss';\nimport { getImages } from '../../helpers/getImages';\nimport { getPortoflioBuildingsIndustrial } from '../../services/api';\nimport { setIsLoading } from '../../redux/global/globalSlice';\n\nconst BuildingsIndustrial = () => {\n  const [projects, setProjects] = useState();\n  const [featuredImages, setFeaturedImages] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(setIsLoading(true));\n      try {\n        const data = await getPortoflioBuildingsIndustrial();\n        setProjects(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        dispatch(setIsLoading(false));\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  useEffect(() => {\n    getImages(projects, featuredImages, setFeaturedImages, getImages);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projects]);\n  return (\n    <>\n      <Helmet>\n        <title>2m Studio Pracownia Projektowa - Budynki przemys≈Çowe</title>\n      </Helmet>\n\n      <ul className={styles['gallery']}>\n        {projects &&\n          projects.map(post => (\n            <li key={post.id} className={styles['photo-card']}>\n              <Link to={`/${post.id}`}>\n                {post.featured_media !== 0 &&\n                  featuredImages[post.featured_media] && (\n                    <div className={styles['img-container']}>\n                      <img\n                        className={styles['card__img']}\n                        src={featuredImages[post.featured_media]}\n                        alt={post.title.rendered}\n                        loading=\"lazy\"\n                      />\n                      <div className={styles['card__overlay']}>\n                        <div className={styles['box']}>\n                          <p className={styles['card__title']}>\n                            {post.title.rendered}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default BuildingsIndustrial;\n","// config.js\nexport const BASE_URL = 'https://www.2mstudio.org.pl/wordpress/wp-json/wp/v2/';\n\nexport const API_PATHS = {\n  post: 'posts',\n  blog: 'posts?categories=5',\n  portfolioInterior: 'posts?categories=16',\n  portoflioBuildingsResidential: 'posts?categories=17',\n  portoflioBuildingsIndustrial: 'posts?categories=18',\n  portoflioBuildingsCommercial: 'posts?categories=19',\n  media: 'media/',\n  aboutUs: 'pages/112',\n};\n","import axios from 'axios';\nimport { BASE_URL, API_PATHS } from '../config.js';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}${path}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n    throw error;\n  }\n};\n\nexport const getPost = async postId => {\n  const post = await fetchData(`${API_PATHS.post}/${postId}`);\n  return post;\n};\n\nexport const getBlogPosts = async (page, perPage = 6) => {\n  const apiUrl = `${API_PATHS.blog}&page=${page}&per_page=${perPage}`;\n  try {\n    const response = await axios.get(apiUrl, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      const totalPostsHeader = response.headers['x-wp-total'];\n      const posts = response.data;\n\n      const lastPage = Math.ceil(parseInt(totalPostsHeader) / perPage);\n\n      return { posts, lastPage };\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching blog posts:', error);\n    throw error;\n  }\n};\n\nexport const getPortfolioInterior = async () => {\n  const projects = await fetchData(API_PATHS.portfolioInterior);\n  return projects;\n};\n\nexport const getPortoflioBuildingsResidential = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsResidential);\n  return projects;\n};\n\nexport const getPortoflioBuildingsIndustrial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsIndustrial);\n  return projects;\n};\n\nexport const getPortoflioBuildingsCommercial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsCommercial);\n  return projects;\n};\n\nexport const getAboutUsInfo = async () => {\n  const data = await fetchData(API_PATHS.aboutUs);\n  return data;\n};\n\nexport const fetchImages = async mediaId => {\n  try {\n    const response = await axios.get(`${API_PATHS.media}${mediaId}`);\n\n    if (response.status !== 200) {\n      throw new Error('Network response was not ok');\n    }\n\n    const images = response.data;\n    return images;\n  } catch (error) {\n    console.error('There was a problem fetching the media:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"Projects_gallery__hNvDJ\",\"photo-card\":\"Projects_photo-card__S9+U1\",\"card__img\":\"Projects_card__img__qCb7i\",\"img-container\":\"Projects_img-container__ivNhx\",\"card__overlay\":\"Projects_card__overlay__jxzgL\",\"card__title\":\"Projects_card__title__Ew4OD\",\"card__content\":\"Projects_card__content__EmAMQ\",\"box\":\"Projects_box__0rHAI\"};"],"names":["getImages","async","posts","imgState","setImgState","post","featured_media","mediaData","fetchImages","prevState","source_url","error","console","BuildingsIndustrial","projects","setProjects","useState","featuredImages","setFeaturedImages","dispatch","useDispatch","useEffect","setIsLoading","data","getPortoflioBuildingsIndustrial","fetchData","_jsxs","_Fragment","children","_jsx","Helmet","className","styles","map","Link","to","concat","id","src","alt","title","rendered","loading","BASE_URL","API_PATHS","axios","defaults","baseURL","response","get","path","headers","accept","status","Error","getPost","postId","getBlogPosts","page","perPage","arguments","length","undefined","apiUrl","totalPostsHeader","lastPage","Math","ceil","parseInt","getPortfolioInterior","getPortoflioBuildingsResidential","getPortoflioBuildingsCommercial","getAboutUsInfo","mediaId"],"sourceRoot":""}