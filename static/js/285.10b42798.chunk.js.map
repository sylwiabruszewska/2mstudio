{"version":3,"file":"static/js/285.10b42798.chunk.js","mappings":"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","sources":["helpers/getImages.js","webpack://2mstudio/./src/pages/BlogPage/BlogPage.module.scss?848f","pages/BlogPage/BlogPage.jsx","config.js","services/api.js"],"sourcesContent":["import { fetchImages } from '../services/api';\nimport defaultImage from '../assets/images/photo-home.jpg';\n\nexport const getImages = async (posts, imgState, setImgState) => {\n  try {\n    for (const post of posts) {\n      if (post.featured_media !== null && !imgState[post.featured_media]) {\n        try {\n          const mediaData = await fetchImages(post.featured_media);\n          setImgState(prevState => ({\n            ...prevState,\n            [post.featured_media]: mediaData.source_url || defaultImage,\n          }));\n        } catch (error) {\n          console.error(\n            'There was a problem fetching media for post:',\n            post.id,\n            error\n          );\n          setImgState(prevState => ({\n            ...prevState,\n            [post.featured_media]: defaultImage,\n          }));\n        }\n      }\n    }\n  } catch (error) {\n    console.error('There was a problem updating images state:', error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"blog-list\":\"BlogPage_blog-list__FhnfV\",\"blog-post\":\"BlogPage_blog-post__4Rp8X\",\"blog-card\":\"BlogPage_blog-card__Yx2Dp\",\"box\":\"BlogPage_box__+pPxV\",\"post-img\":\"BlogPage_post-img__C6DEb\",\"blog-date\":\"BlogPage_blog-date__WTLjp\",\"blog-title\":\"BlogPage_blog-title__k+MSP\",\"blog-excerpt\":\"BlogPage_blog-excerpt__btwjq\",\"overlay\":\"BlogPage_overlay__QkxZR\",\"btn-group\":\"BlogPage_btn-group__0U9TC\",\"btn-pag\":\"BlogPage_btn-pag__4ry92\"};","import { Helmet } from 'react-helmet';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './BlogPage.module.scss';\nimport { Section, Container, Button, AnimatedRoute } from 'components';\nimport { getImages } from '../../helpers/getImages';\nimport { getBlogPosts } from '../../services/api';\nimport { setIsLoading } from '../../redux/global/globalSlice';\n\nconst BlogPage = () => {\n  const [posts, setPosts] = useState();\n  const [featuredImages, setFeaturedImages] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPageBlog, setLastPageBlog] = useState(null);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const page = parseInt(queryParams.get('page') || '1');\n    setCurrentPage(page);\n  }, [location]);\n\n  const goToNextPage = () => {\n    const nextPage = currentPage + 1;\n    setCurrentPage(nextPage);\n    updateURL(nextPage);\n  };\n\n  const goToPrevPage = () => {\n    const prevPage = currentPage - 1;\n    setCurrentPage(prevPage);\n    updateURL(prevPage);\n  };\n\n  const updateURL = page => {\n    const queryParams = new URLSearchParams(location.search);\n    queryParams.set('page', page);\n    const newURL = `${location.pathname}?${queryParams.toString()}`;\n    window.history.pushState({}, '', newURL);\n  };\n\n  const fetchData = async () => {\n    dispatch(setIsLoading(true));\n    try {\n      const { posts, lastPage } = await getBlogPosts(currentPage);\n\n      setPosts(posts);\n\n      if (lastPageBlog === null) {\n        setLastPageBlog(lastPage);\n      }\n      setDataLoaded(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      dispatch(setIsLoading(false));\n    }\n  };\n\n  useEffect(() => {\n    if (posts && posts.length > 0) {\n      getImages(posts, featuredImages, setFeaturedImages);\n    }\n  }, [posts, featuredImages]);\n\n  return (\n    <>\n      <Helmet>\n        <title>2M STUDIO Pracownia Projektowa - Portfolio - Blog</title>\n      </Helmet>\n\n      <Section>\n        <Container>\n          {dataLoaded && (\n            <AnimatedRoute>\n              <div className={styles['blog-list']}>\n                {posts &&\n                  posts.map(post => (\n                    <article key={post.id} className={styles['blog-card']}>\n                      <div className={styles['blog-post']}>\n                        <Link to={`/${post.id}`}>\n                          <p className={styles['blog-date']}>\n                            {new Date(post.date).toLocaleDateString('pl-PL', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric',\n                            })}\n                          </p>\n                          <h2 className={styles['blog-title']}>\n                            {post.title.rendered}\n                          </h2>\n                          <p\n                            className=\"blog-excerpt\"\n                            dangerouslySetInnerHTML={{\n                              __html: post.excerpt.rendered,\n                            }}\n                          />\n                        </Link>\n                      </div>\n                      <div className={styles['overlay']}>\n                        <Link to={`/${post.id}`}>\n                          {post.featured_media !== 0 &&\n                            featuredImages[post.featured_media] && (\n                              <div>\n                                <img\n                                  src={featuredImages[post.featured_media]}\n                                  alt={post.title.rendered}\n                                  className={styles['post-img']}\n                                />\n\n                                <div className={styles['box']}>zobacz post</div>\n                              </div>\n                            )}\n                        </Link>\n                      </div>\n                    </article>\n                  ))}\n              </div>\n              <div className={styles['btn-group']}>\n                <div>\n                  {posts && currentPage > 1 && (\n                    <Button\n                      className={styles['btn-pag']}\n                      onClick={goToPrevPage}\n                    >\n                      Poprzednia strona\n                    </Button>\n                  )}\n                </div>\n                <div>\n                  {currentPage < lastPageBlog && posts && (\n                    <Button\n                      className={styles['btn-pag']}\n                      onClick={goToNextPage}\n                    >\n                      Następna strona\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </AnimatedRoute>\n          )}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default BlogPage;\n","// config.js\nexport const BASE_URL = 'https://www.2mstudio.org.pl/wordpress/wp-json/wp/v2/';\n\nexport const API_PATHS = {\n  post: 'posts',\n  blog: 'posts?categories=5',\n  portfolioInterior: 'posts?categories=16',\n  portoflioBuildingsResidential: 'posts?categories=17',\n  portoflioBuildingsIndustrial: 'posts?categories=18',\n  portoflioBuildingsCommercial: 'posts?categories=19',\n  media: 'media/',\n  aboutUs: 'pages/112',\n};\n","import axios from 'axios';\nimport { BASE_URL, API_PATHS } from '../config.js';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}${path}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n    throw error;\n  }\n};\n\nexport const getPost = async postId => {\n  const post = await fetchData(`${API_PATHS.post}/${postId}`);\n  return post;\n};\n\nexport const getBlogPosts = async (page, perPage = 6) => {\n  const apiUrl = `${API_PATHS.blog}&page=${page}&per_page=${perPage}`;\n  try {\n    const response = await axios.get(apiUrl, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      const totalPostsHeader = response.headers['x-wp-total'];\n      const posts = response.data;\n\n      const lastPage = Math.ceil(parseInt(totalPostsHeader) / perPage);\n\n      return { posts, lastPage };\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching blog posts:', error);\n    throw error;\n  }\n};\n\nexport const getPortfolioInterior = async () => {\n  const projects = await fetchData(API_PATHS.portfolioInterior);\n  return projects;\n};\n\nexport const getPortoflioBuildingsResidential = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsResidential);\n  return projects;\n};\n\nexport const getPortoflioBuildingsIndustrial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsIndustrial);\n  return projects;\n};\n\nexport const getPortoflioBuildingsCommercial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsCommercial);\n  return projects;\n};\n\nexport const getAboutUsInfo = async () => {\n  const data = await fetchData(API_PATHS.aboutUs);\n  return data;\n};\n\nexport const fetchImages = async mediaId => {\n  try {\n    const response = await axios.get(`${API_PATHS.media}${mediaId}`);\n\n    if (response.status !== 200) {\n      throw new Error('Network response was not ok');\n    }\n\n    const images = response.data;\n    return images;\n  } catch (error) {\n    console.error('There was a problem fetching the media:', error);\n    throw error;\n  }\n};\n"],"names":["getImages","async","posts","imgState","setImgState","post","featured_media","mediaData","fetchImages","prevState","source_url","defaultImage","error","console","id","BlogPage","setPosts","useState","featuredImages","setFeaturedImages","currentPage","setCurrentPage","lastPageBlog","setLastPageBlog","dispatch","useDispatch","location","useLocation","dataLoaded","setDataLoaded","useEffect","fetchData","queryParams","URLSearchParams","search","page","parseInt","get","updateURL","set","newURL","concat","pathname","toString","window","history","pushState","setIsLoading","lastPage","getBlogPosts","length","_jsxs","_Fragment","children","_jsx","Helmet","Section","Container","AnimatedRoute","className","styles","map","Link","to","Date","date","toLocaleDateString","year","month","day","title","rendered","dangerouslySetInnerHTML","__html","excerpt","src","alt","Button","onClick","goToPrevPage","prevPage","goToNextPage","nextPage","BASE_URL","API_PATHS","axios","defaults","baseURL","response","path","headers","accept","status","data","Error","getPost","postId","perPage","arguments","undefined","apiUrl","totalPostsHeader","Math","ceil","getPortfolioInterior","getPortoflioBuildingsResidential","getPortoflioBuildingsIndustrial","getPortoflioBuildingsCommercial","getAboutUsInfo","mediaId"],"sourceRoot":""}