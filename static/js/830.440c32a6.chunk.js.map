{"version":3,"file":"static/js/830.440c32a6.chunk.js","mappings":"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","sources":["helpers/getImages.js","pages/ProjectsPages/AllProjects.jsx","config.js","services/api.js","webpack://2mstudio/./src/pages/ProjectsPages/Projects.module.scss?05d7"],"sourcesContent":["import { fetchImages } from '../services/api';\nimport defaultImage from '../assets/images/photo-home.jpg';\n\nexport const getImages = async (posts, imgState, setImgState) => {\n  try {\n    for (const post of posts) {\n      if (post.featured_media !== null && !imgState[post.featured_media]) {\n        try {\n          const mediaData = await fetchImages(post.featured_media);\n          setImgState(prevState => ({\n            ...prevState,\n            [post.featured_media]: mediaData.source_url || defaultImage,\n          }));\n        } catch (error) {\n          console.error(\n            'There was a problem fetching media for post:',\n            post.id,\n            error\n          );\n          setImgState(prevState => ({\n            ...prevState,\n            [post.featured_media]: defaultImage,\n          }));\n        }\n      }\n    }\n  } catch (error) {\n    console.error('There was a problem updating images state:', error);\n  }\n};\n","import { Helmet } from 'react-helmet';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './Projects.module.scss';\nimport { getImages } from '../../helpers/getImages';\nimport {\n  getPortfolioInterior,\n  getPortoflioBuildingsCommercial,\n  getPortoflioBuildingsIndustrial,\n  getPortoflioBuildingsResidential,\n} from '../../services/api';\nimport { setIsLoading } from '../../redux/global/globalSlice';\n\nconst AllProjects = () => {\n  const [projects, setProjects] = useState();\n  const [featuredImages, setFeaturedImages] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(setIsLoading(true));\n      try {\n        const [\n          InteriorProjects,\n          commercialProjects,\n          residentialProjects,\n          industrialProjects,\n        ] = await Promise.all([\n          getPortfolioInterior(),\n          getPortoflioBuildingsCommercial(),\n          getPortoflioBuildingsResidential(),\n          getPortoflioBuildingsIndustrial(),\n        ]);\n\n        const allProjects = [\n          ...InteriorProjects,\n          ...commercialProjects,\n          ...residentialProjects,\n          ...industrialProjects,\n        ];\n\n        setProjects(allProjects);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        dispatch(setIsLoading(false));\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (projects && projects.length > 0) {\n      getImages(projects, featuredImages, setFeaturedImages);\n    }\n  }, [projects, featuredImages]);\n\n  return (\n    <>\n      <Helmet>\n        <title>2M STUDIO Pracownia Projektowa - Budynki us≈Çugowe</title>\n      </Helmet>\n\n      <ul className={styles['gallery']}>\n        {projects &&\n          projects.map(post => (\n            <li key={post.id} className={styles['photo-card']}>\n              <Link to={`/${post.id}`}>\n                {post.featured_media !== 0 &&\n                  featuredImages[post.featured_media] && (\n                    <div className={styles['img-container']}>\n                      <img\n                        className={styles['card__img']}\n                        src={featuredImages[post.featured_media]}\n                        alt={post.title.rendered}\n                        loading=\"lazy\"\n                      />\n                      <div className={styles['card__overlay']}>\n                        <div className={styles['box']}>\n                          <h3 className={styles['card__title']}>\n                            {post.title.rendered}\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default AllProjects;\n","// config.js\nexport const BASE_URL = 'https://www.2mstudio.org.pl/wordpress/wp-json/wp/v2/';\n\nexport const API_PATHS = {\n  post: 'posts',\n  blog: 'posts?categories=5',\n  portfolioInterior: 'posts?categories=16',\n  portoflioBuildingsResidential: 'posts?categories=17',\n  portoflioBuildingsIndustrial: 'posts?categories=18',\n  portoflioBuildingsCommercial: 'posts?categories=19',\n  media: 'media/',\n  aboutUs: 'pages/112',\n};\n","import axios from 'axios';\nimport { BASE_URL, API_PATHS } from '../config.js';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}${path}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n    throw error;\n  }\n};\n\nexport const getPost = async postId => {\n  const post = await fetchData(`${API_PATHS.post}/${postId}`);\n  return post;\n};\n\nexport const getBlogPosts = async (page, perPage = 6) => {\n  const apiUrl = `${API_PATHS.blog}&page=${page}&per_page=${perPage}`;\n  try {\n    const response = await axios.get(apiUrl, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      const totalPostsHeader = response.headers['x-wp-total'];\n      const posts = response.data;\n\n      const lastPage = Math.ceil(parseInt(totalPostsHeader) / perPage);\n\n      return { posts, lastPage };\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching blog posts:', error);\n    throw error;\n  }\n};\n\nexport const getPortfolioInterior = async () => {\n  const projects = await fetchData(API_PATHS.portfolioInterior);\n  return projects;\n};\n\nexport const getPortoflioBuildingsResidential = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsResidential);\n  return projects;\n};\n\nexport const getPortoflioBuildingsIndustrial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsIndustrial);\n  return projects;\n};\n\nexport const getPortoflioBuildingsCommercial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsCommercial);\n  return projects;\n};\n\nexport const getAboutUsInfo = async () => {\n  const data = await fetchData(API_PATHS.aboutUs);\n  return data;\n};\n\nexport const fetchImages = async mediaId => {\n  try {\n    const response = await axios.get(`${API_PATHS.media}${mediaId}`);\n\n    if (response.status !== 200) {\n      throw new Error('Network response was not ok');\n    }\n\n    const images = response.data;\n    return images;\n  } catch (error) {\n    console.error('There was a problem fetching the media:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"Projects_gallery__hNvDJ\",\"photo-card\":\"Projects_photo-card__S9+U1\",\"card__img\":\"Projects_card__img__qCb7i\",\"img-container\":\"Projects_img-container__ivNhx\",\"card__overlay\":\"Projects_card__overlay__jxzgL\",\"card__title\":\"Projects_card__title__Ew4OD\",\"box\":\"Projects_box__0rHAI\"};"],"names":["getImages","async","posts","imgState","setImgState","post","featured_media","mediaData","fetchImages","prevState","source_url","defaultImage","error","console","id","AllProjects","projects","setProjects","useState","featuredImages","setFeaturedImages","dispatch","useDispatch","useEffect","setIsLoading","InteriorProjects","commercialProjects","residentialProjects","industrialProjects","Promise","all","getPortfolioInterior","getPortoflioBuildingsCommercial","getPortoflioBuildingsResidential","getPortoflioBuildingsIndustrial","allProjects","fetchData","length","_jsxs","_Fragment","children","_jsx","Helmet","className","styles","map","Link","to","concat","src","alt","title","rendered","loading","BASE_URL","API_PATHS","axios","defaults","baseURL","response","get","path","headers","accept","status","data","Error","getPost","postId","getBlogPosts","page","perPage","arguments","undefined","apiUrl","totalPostsHeader","lastPage","Math","ceil","parseInt","getAboutUsInfo","mediaId"],"sourceRoot":""}