{"version":3,"file":"static/js/567.61dc3b6c.chunk.js","mappings":"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","sources":["webpack://2mstudio/./src/pages/OfferPage/OfferPage.module.scss?ee2a","pages/OfferPage/OfferPage.jsx","config.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OfferPage_wrapper__IBte-\",\"content\":\"OfferPage_content__ska2j\"};","import { Helmet } from 'react-helmet';\nimport parse from 'html-react-parser';\nimport { useQuery } from 'react-query';\n\nimport styles from './OfferPage.module.scss';\nimport { Section, Container, BackLink, Loader } from 'components';\nimport { getOfferData } from '../../services/api';\n\nconst OfferPage = () => {\n  const { data, isLoading, isError } = useQuery('offerData', getOfferData);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return <p>Wystąpił błąd, spróbuj odświeżyć stronę.</p>;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>2M STUDIO Pracownia Projektowa - Oferta</title>\n      </Helmet>\n\n      <Section>\n        <Container>\n          <div className={styles['wrapper']}>\n            <div className={styles['content']}>{data && parse(data)}</div>\n          </div>\n\n          <BackLink />\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default OfferPage;\n","// config.js\nexport const BASE_URL = 'https://www.2mstudio.org.pl/wordpress/wp-json/wp/v2/';\n\nexport const API_PATHS = {\n  post: 'posts',\n  blog: 'posts?categories=5',\n  portfolioInterior: 'posts?categories=16',\n  portoflioBuildingsResidential: 'posts?categories=17',\n  portoflioBuildingsIndustrial: 'posts?categories=18',\n  portoflioBuildingsCommercial: 'posts?categories=19',\n  media: 'media/',\n  aboutUs: 'pages/112',\n  offer: 'pages/342',\n  privacy: 'pages/3',\n};\n","import axios from 'axios';\nimport { BASE_URL, API_PATHS } from '../config.js';\n\nimport defaultImage from '../assets/images/photo-home-medium.webp';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// fetch data\nexport const fetchData = async path => {\n  try {\n    const response = await instance.get(`${BASE_URL}${path}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n    throw error;\n  }\n};\n\n// fetch projects with images\nexport const fetchProjectsWithImages = async path => {\n  const projects = await fetchData(path);\n\n  const projectsWithImages = await Promise.all(\n    projects.map(async project => {\n      let simplifiedProject = {\n        id: project.id,\n        img: defaultImage,\n        title: project.title.rendered,\n      };\n\n      if (project.featured_media) {\n        try {\n          const featuredMedia = await fetchImages(project.featured_media);\n          simplifiedProject.img = featuredMedia.source_url || defaultImage;\n        } catch (error) {\n          console.error(\n            'There was a problem fetching images for project:',\n            error\n          );\n        }\n      }\n\n      return simplifiedProject;\n    })\n  );\n\n  return projectsWithImages;\n};\n\n// fetch projects for different categories\nexport const getPortfolioInterior = async () => {\n  const projects = await fetchProjectsWithImages(API_PATHS.portfolioInterior);\n  return projects;\n};\n\nexport const getPortoflioBuildingsResidential = async () => {\n  const projects = await fetchProjectsWithImages(\n    API_PATHS.portoflioBuildingsResidential\n  );\n  return projects;\n};\n\nexport const getPortoflioBuildingsIndustrial = async () => {\n  const projects = await fetchProjectsWithImages(\n    API_PATHS.portoflioBuildingsIndustrial\n  );\n  return projects;\n};\n\nexport const getPortoflioBuildingsCommercial = async () => {\n  const projects = await fetchProjectsWithImages(\n    API_PATHS.portoflioBuildingsCommercial\n  );\n  return projects;\n};\n\n// fetch blog posts\nexport const getBlogPosts = async (page, perPage = 6) => {\n  const apiUrl = `${API_PATHS.blog}&page=${page}&per_page=${perPage}`;\n\n  const response = await instance.get(apiUrl, {\n    headers: {\n      accept: 'application/json',\n    },\n  });\n\n  if (response.status === 200) {\n    const totalPostsHeader = response.headers['x-wp-total'];\n    const posts = response.data;\n    const lastPage = Math.ceil(parseInt(totalPostsHeader) / perPage);\n\n    const postsWithImages = await Promise.all(\n      posts.map(async post => {\n        let simplifiedPost = {\n          id: post.id,\n          img: defaultImage,\n          title: post.title.rendered,\n          date: post.date,\n          excerpt: post.excerpt.rendered,\n        };\n\n        if (post.featured_media) {\n          try {\n            const featuredMedia = await fetchImages(post.featured_media);\n            simplifiedPost.img = featuredMedia.source_url || defaultImage;\n          } catch (error) {\n            console.error(\n              'There was a problem fetching images for posts:',\n              error\n            );\n          }\n        }\n\n        return simplifiedPost;\n      })\n    );\n\n    return { posts: postsWithImages, lastPage };\n  } else {\n    throw new Error('Network response was not ok');\n  }\n};\n\nexport const getPost = async postId => {\n  const post = await fetchData(`${API_PATHS.post}/${postId}`);\n  return post;\n};\n\n// fetch data for a subpage - About Us\nexport const getAboutUsInfo = async () => {\n  const data = await fetchData(API_PATHS.aboutUs);\n  if (data && data.content && data.content.rendered) {\n    return data.content.rendered;\n  } else {\n    throw new Error('There was a problem fetching the data.');\n  }\n};\n\n// fetch data for a subpage - Offer\nexport const getOfferData = async () => {\n  const data = await fetchData(API_PATHS.offer);\n  if (data && data.content && data.content.rendered) {\n    return data.content.rendered;\n  } else {\n    throw new Error('There was a problem fetching the data.');\n  }\n};\n\n// fetch data for a subpage - Privacy Policy\nexport const getPrivacyData = async () => {\n  const data = await fetchData(API_PATHS.privacy);\n  if (data && data.content && data.content.rendered) {\n    return data.content.rendered;\n  } else {\n    throw new Error('There was a problem fetching the data.');\n  }\n};\n\n// fetch images for projects, blog posts\nexport const fetchImages = async mediaId => {\n  try {\n    const response = await instance.get(`${API_PATHS.media}${mediaId}`);\n\n    if (response.status !== 200) {\n      throw new Error('Network response was not ok');\n    }\n\n    const images = response.data;\n    return images;\n  } catch (error) {\n    console.error('There was a problem fetching the media:', error);\n    throw error;\n  }\n};\n"],"names":["OfferPage","data","isLoading","isError","useQuery","getOfferData","_jsx","Loader","children","_jsxs","_Fragment","Helmet","Section","Container","className","styles","parse","BackLink","BASE_URL","API_PATHS","instance","axios","create","baseURL","headers","fetchData","async","response","get","path","accept","status","Error","error","console","fetchProjectsWithImages","projects","Promise","all","map","simplifiedProject","id","project","img","defaultImage","title","rendered","featured_media","featuredMedia","fetchImages","source_url","getPortfolioInterior","getPortoflioBuildingsResidential","getPortoflioBuildingsIndustrial","getPortoflioBuildingsCommercial","getBlogPosts","page","perPage","arguments","length","undefined","apiUrl","totalPostsHeader","posts","lastPage","Math","ceil","parseInt","simplifiedPost","post","date","excerpt","getPost","postId","getAboutUsInfo","content","getPrivacyData","mediaId"],"sourceRoot":""}