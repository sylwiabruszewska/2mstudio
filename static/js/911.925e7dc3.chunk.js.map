{"version":3,"file":"static/js/911.925e7dc3.chunk.js","mappings":"qKACA,QAAsB,yBAAtB,EAAyD,6BAAzD,EAAgG,6B,iCCOhG,MAsCA,EAtCoBA,KAClB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,YAexB,OAbAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMJ,QAAaK,EAAAA,EAAAA,MACnBJ,EAAQD,EACV,CAAE,MAAOM,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGFE,EAAW,GACV,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,8CAGTC,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAAAH,UACNF,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAJ,SAAA,EACRC,EAAAA,EAAAA,KAAA,OAAKI,IAAI,GAAGC,UAAWC,EAAeC,IAAI,yBAC1CP,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAkBP,UAChCC,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAkBP,SAC/BX,IAAQoB,EAAAA,EAAAA,IAAMpB,EAAKqB,QAAQC,eAIhCV,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,WAGZ,C,gHCzCA,MAAMC,EAAW,uDAEXC,EACL,QADKA,EAEL,qBAFKA,EAGQ,sBAHRA,EAIoB,sBAJpBA,EAKmB,sBALnBA,EAMmB,sBANnBA,EAOJ,SAPIA,EAQF,YCRXC,EAAAA,EAAMC,SAASC,QAAUJ,EAElB,MAAMhB,EAAYJ,UACvB,IACE,MAAMyB,QAAiBH,EAAAA,EAAMI,IAAI,GAADC,OAAIP,GAAQO,OAAGC,GAAQ,CACrDC,QAAS,CACPC,OAAQ,sBAIZ,GAAwB,MAApBL,EAASM,OACX,OAAON,EAAS7B,KAEhB,MAAM,IAAIoC,MAAM,8BAEpB,CAAE,MAAO9B,GAEP,MADAC,QAAQD,MAAM,yCAA0CA,GAClDA,CACR,GAGW+B,EAAUjC,eACFI,EAAU,GAADuB,OAAIN,EAAc,KAAAM,OAAIO,IAIvCC,EAAenC,eAAOoC,GAAuB,IAAjBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACjD,MAAMG,EAAM,GAAAd,OAAMN,EAAc,UAAAM,OAASS,EAAI,cAAAT,OAAaU,GAC1D,IACE,MAAMZ,QAAiBH,EAAAA,EAAMI,IAAIe,EAAQ,CACvCZ,QAAS,CACPC,OAAQ,sBAIZ,GAAwB,MAApBL,EAASM,OAAgB,CAC3B,MAAMW,EAAmBjB,EAASI,QAAQ,cACpCc,EAAQlB,EAAS7B,KAIvB,MAAO,CAAE+C,QAAOC,SAFCC,KAAKC,KAAKC,SAASL,GAAoBL,GAG1D,CACE,MAAM,IAAIL,MAAM,8BAEpB,CAAE,MAAO9B,GAEP,MADAC,QAAQD,MAAM,+CAAgDA,GACxDA,CACR,CACF,EAEa8C,EAAuBhD,eACXI,EAAUiB,GAItB4B,EAAmCjD,eACvBI,EAAUiB,GAItB6B,EAAkClD,eACtBI,EAAUiB,GAItB8B,EAAkCnD,eACtBI,EAAUiB,GAItBpB,EAAiBD,eACTI,EAAUiB,GAIlB+B,EAAcpD,UACzB,IACE,MAAMyB,QAAiBH,EAAAA,EAAMI,IAAI,GAADC,OAAIN,GAAeM,OAAG0B,IAEtD,GAAwB,MAApB5B,EAASM,OACX,MAAM,IAAIC,MAAM,+BAIlB,OADeP,EAAS7B,IAE1B,CAAE,MAAOM,GAEP,MADAC,QAAQD,MAAM,0CAA2CA,GACnDA,CACR,E","sources":["webpack://2mstudio/./src/pages/AboutUsPage/AboutUsPage.module.scss?c846","pages/AboutUsPage/AboutUsPage.jsx","config.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"AboutUsPage_img__jRiGK\",\"wrapper\":\"AboutUsPage_wrapper__2Y48N\",\"content\":\"AboutUsPage_content__Kx8w-\"};","import { Helmet } from 'react-helmet';\nimport { useEffect, useState } from 'react';\nimport parse from 'html-react-parser';\n\nimport styles from './AboutUsPage.module.scss';\nimport { Section, Container, BackLink } from 'components';\nimport { getAboutUsInfo } from '../../services/api';\n\nconst AboutUsPage = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getAboutUsInfo();\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>2M STUDIO Pracownia Projektowa - O nas</title>\n      </Helmet>\n\n      <Section>\n        <Container>\n          <img src=\"\" className={styles['img']} alt=\"Nasz zespół\" />\n          <div className={styles['wrapper']}>\n            <div className={styles['content']}>\n              {data && parse(data.content.rendered)}\n            </div>\n          </div>\n\n          <BackLink />\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default AboutUsPage;\n","// config.js\nexport const BASE_URL = 'https://www.2mstudio.org.pl/wordpress/wp-json/wp/v2/';\n\nexport const API_PATHS = {\n  post: 'posts',\n  blog: 'posts?categories=5',\n  portfolioInterior: 'posts?categories=16',\n  portoflioBuildingsResidential: 'posts?categories=17',\n  portoflioBuildingsIndustrial: 'posts?categories=18',\n  portoflioBuildingsCommercial: 'posts?categories=19',\n  media: 'media/',\n  aboutUs: 'pages/112',\n};\n","import axios from 'axios';\nimport { BASE_URL, API_PATHS } from '../config.js';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}${path}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n    throw error;\n  }\n};\n\nexport const getPost = async postId => {\n  const post = await fetchData(`${API_PATHS.post}/${postId}`);\n  return post;\n};\n\nexport const getBlogPosts = async (page, perPage = 6) => {\n  const apiUrl = `${API_PATHS.blog}&page=${page}&per_page=${perPage}`;\n  try {\n    const response = await axios.get(apiUrl, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      const totalPostsHeader = response.headers['x-wp-total'];\n      const posts = response.data;\n\n      const lastPage = Math.ceil(parseInt(totalPostsHeader) / perPage);\n\n      return { posts, lastPage };\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching blog posts:', error);\n    throw error;\n  }\n};\n\nexport const getPortfolioInterior = async () => {\n  const projects = await fetchData(API_PATHS.portfolioInterior);\n  return projects;\n};\n\nexport const getPortoflioBuildingsResidential = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsResidential);\n  return projects;\n};\n\nexport const getPortoflioBuildingsIndustrial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsIndustrial);\n  return projects;\n};\n\nexport const getPortoflioBuildingsCommercial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsCommercial);\n  return projects;\n};\n\nexport const getAboutUsInfo = async () => {\n  const data = await fetchData(API_PATHS.aboutUs);\n  return data;\n};\n\nexport const fetchImages = async mediaId => {\n  try {\n    const response = await axios.get(`${API_PATHS.media}${mediaId}`);\n\n    if (response.status !== 200) {\n      throw new Error('Network response was not ok');\n    }\n\n    const images = response.data;\n    return images;\n  } catch (error) {\n    console.error('There was a problem fetching the media:', error);\n    throw error;\n  }\n};\n"],"names":["AboutUsPage","data","setData","useState","useEffect","async","getAboutUsInfo","error","console","fetchData","_jsxs","_Fragment","children","_jsx","Helmet","Section","Container","src","className","styles","alt","parse","content","rendered","BackLink","BASE_URL","API_PATHS","axios","defaults","baseURL","response","get","concat","path","headers","accept","status","Error","getPost","postId","getBlogPosts","page","perPage","arguments","length","undefined","apiUrl","totalPostsHeader","posts","lastPage","Math","ceil","parseInt","getPortfolioInterior","getPortoflioBuildingsResidential","getPortoflioBuildingsIndustrial","getPortoflioBuildingsCommercial","fetchImages","mediaId"],"sourceRoot":""}